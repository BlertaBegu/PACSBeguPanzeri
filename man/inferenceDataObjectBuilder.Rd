% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InferenceDataObject.R
\name{inferenceDataObjectBuilder}
\alias{inferenceDataObjectBuilder}
\title{Constructor for inferenceDataObject class}
\usage{
inferenceDataObjectBuilder<-function(test = NULL, 
interval = NULL, 
type = 'wald', 
exact = "False", 
dim, 
coeff = NULL, 
beta0 = NULL, 
level = 0.95,
n_flip = 1000,
tol_fspai = 0.05)
}
\arguments{
\item{test}{A list of strings defining the type of test to be performed, with the same length of \code{interval} and \code{type} lists. The default is NULL, and can take values 'one-at-the-time' 
or 'simultaneous'. If the value is NULL, no test is performed, and the \code{interval} parameter in the same position of the list needs to be not NULL. If it takes value
'one-at-the-time', the parameters \code{beta0}, \code{dim}, \code{coeff} are taken into account, and one-at-the-time tests will be performed. If it takes value 
'simultaneous', a global simultaneous test will be performed.}

\item{interval}{A list of strings defining the type of confidence intervals to be computed, with the same length of \code{test} and \code{type} lists. The default is NULL,
and can take values 'one-at-the-time' 'simultaneous' and 'bonferroni'. If the value is NULL, no interval will be computed, and the \code{test} parameter in the corresponding position needs to be set.
 Otherwise one at the time, simultaneous or Bonferroni correction intervals will be computed. If it is not NULL, the parameter \code{level} will be taken into account. Confidence intervals can be 
 computed only in Wald or Speckman implementation.}

\item{type}{A list of strings defining the type of implementation for the inferential analysis, with the same length of \code{test} list and \code{interval} list . The possible values are three:
'wald'(default), 'speckman' or 'eigen-sign-flip'. If 'eigen-sign-flip' is set, the corresponding \code{interval} position needs to be NULL.}

\item{exact}{A string used to decide the method used to estimate the statistics variance.
The possible values are: 'True' and 'False'(default). In the first case the evaluation is exact but computationally expensive.
In the second case an approximate method is used, leading to a lower accuracy, but faster computation.}

\item{dim}{Number of the covariates, defaulted to NULL. (Must be set by the user)}

\item{coeff}{A matrix, with \code{dim} number of columns, of numeric coefficients, defaulted to NULL. If this parameter is NULL,
in the corresponding inferenceDataObject it will be defaulted to an identity matrix. If at least one 'eigen-sign-flip' value is present in \code{type}, needs to be an identity matrix.}

\item{beta0}{Vector of real numbers (default NULL). It is used only if the \code{test} parameter is set, and has length the number of rows of matrix \code{coeff}. 
If \code{test} is set and \code{beta0} is NULL, will be set to a vector of zeros.}

\item{level}{Level of significance used to compute quantiles for confidence intervals, defaulted to 0.95. It is taken into account only if \code{interval} is set.}

\item{n_flip}{Number of flips performed in Eigen-Sign-Flip test, defaulted to 1000. It is taken into account only if at least one position of \code{type} is set to 'eigen-sign-flip'.}

\item{tol_fspai}{Tolerance for FSPAI algorithm taking value greater than 0, defaulted to 0.05. It is taken into account only if \code{exact} is set to 'False'. The lower is the tolerance, the heavier is the computation.}
}
\value{
The output is a well defined [inferenceDataObject], that can be used as parameter in the [smooth.FEM] function.
}
\description{
A function that build an [inferenceDataObject]. In the process of construction many checks over the input parameters are carried out so that the output is a well defined object,
that can be used as parameter in [smooth.FEM] function. Notice that this constructor ensures well-posedness of the object, but a further check on consistency with smooth.FEM parameters will be carried out inside that function.
}
\examples{
obj1<-inferenceDataObjectBuilder(test = "simultaneous", interval = NULL, exact = 'True', dim = 4);
obj2<-inferenceDataObjectBuilder(interval = "one-at-the-time", dim = 5, level = 0.99);
obj3<-inferenceDataObjectBuilder(test=c('one-at-the-time', 'simultaneous', 'one-at-the-time','none'), interval=c('bonferroni','one-at-the-time','none','simultaneous'),
 type=c('wald','speckman','eigen-sign-flip','speckman'),exact='True', dim=2, level=0.99)
}
